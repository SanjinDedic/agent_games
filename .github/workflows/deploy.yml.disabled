# Name: Deploy to EC2
# Description: This GitHub Actions workflow automates the deployment process to an EC2 instance.
# It runs on every push to the main branch and performs the following tasks:
#   1. Checks out the latest code from the repository
#   2. Connects to the EC2 instance via SSH
#   3. Checks if Docker is installed, and installs it if not present
#   4. Ensures Docker is running and updates to the required version if necessary
#   5. Pulls the latest Docker image for the application
#   6. Updates the application code on the EC2 instance
#   7. Restarts the application using PM2
#
# Prerequisites:
#   - EC2 instance must be set up with the necessary permissions
#   - GitHub repository secrets must be configured with EC2 connection details
#   - PM2 should be installed on the EC2 instance to manage the Node.js application

name: Deploy to EC2

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USERNAME: ${{ secrets.EC2_USERNAME }}
        KEY: ${{ secrets.EC2_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << 'EOF'
          # Check if Docker is installed and running
          if ! command -v docker &> /dev/null; then
            echo "Docker not found. Installing Docker..."
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
          else
            echo "Docker is already installed."
          fi

          # Ensure Docker is running
          if ! sudo systemctl is-active --quiet docker; then
            echo "Starting Docker service..."
            sudo systemctl start docker
          fi

          mkdir -p ~/agent_games
          cd ~/agent_games

          tmp_dir=$(mktemp -d)
          git clone --depth 1 --filter=blob:none --sparse https://github.com/SanjinDedic/agent_games.git "$tmp_dir"
          cd "$tmp_dir"
          git sparse-checkout set backend

          # Copy backend contents to the current directory
          cp -r backend/* ~/agent_games/
          cp -r backend/.[^.]* ~/agent_games/ 2>/dev/null || true

          # Clean up temporary directory
          rm -rf "$tmp_dir"

          cd ~/agent_games
          docker build -t run-with-docker .
          sudo systemctl restart Agent_Games_Service
        
        EOF
