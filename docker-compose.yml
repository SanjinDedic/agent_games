version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: ./backend/docker_utils/dockerfiles/api.dockerfile
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      validator:
        condition: service_healthy
      simulator:
        condition: service_healthy
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/agent_games
      - DATABASE_URL=postgresql://postgres:postgrespassword@postgres:5432/agent_games
      - VALIDATOR_URL=http://validator:8001
      - SIMULATOR_URL=http://simulator:8002
      - SECRET_KEY=${SECRET_KEY:-default_secret_key}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    env_file:
      - ./backend/.env
    mem_limit: 400m
    mem_reservation: 200m
    pids_limit: 50

  validator:
    build:
      context: .
      dockerfile: ./backend/docker_utils/dockerfiles/validator.dockerfile
    # REMOVED: network_mode: "host"
    ports:
      - "8001:8001"  # Added port mapping
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/agent_games
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    env_file:
      - ./backend/.env
    mem_limit: 500m
    mem_reservation: 200m
    pids_limit: 50

  simulator:
    build:
      context: .
      dockerfile: ./backend/docker_utils/dockerfiles/simulator.dockerfile
    # REMOVED: network_mode: "host"
    ports:
      - "8002:8002"  # Added port mapping
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/agent_games
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    env_file:
      - ./backend/.env
    mem_limit: 500m
    mem_reservation: 200m
    pids_limit: 50

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespassword
      - POSTGRES_DB=agent_games
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d agent_games"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    mem_limit: 700m
    mem_reservation: 300m

volumes:
  postgres_data: